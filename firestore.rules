rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(resource) {
      return isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    function hasRequiredProjectFields() {
      let requiredFields = [
        'title',
        'description',
        'startDate',
        'endDate',
        'budget',
        'hourlyRate',
        'userId'
      ];
      return request.resource.data.keys().hasAll(requiredFields);
    }

    function hasValidMilestoneStructure() {
      let milestones = request.resource.data.milestones;
      return milestones is list 
        && (milestones.size() < 101)
        && (milestones.size() == 0 || milestones[0].resources is list)
        && (milestones.size() == 0 || milestones[0].budget is number)
        && (milestones.size() == 0 || milestones[0].budget >= 0)
        && (milestones.size() == 0 || milestones[0].totalStories is number)
        && (milestones.size() == 0 || milestones[0].totalStories >= 0)
        && (milestones.size() == 0 || milestones[0].completedStories is number)
        && (milestones.size() == 0 || milestones[0].completedStories >= 0)
        && (milestones.size() == 0 || milestones[0].completedStories <= milestones[0].totalStories)
        && (milestones.size() == 0 || milestones[0].resources.size() < 11)
        && (milestones.size() == 0 || milestones[0].isDone is bool);
    }

    function isMilestoneUpdateValid() {
      let unchangedFields = request.resource.data.diff(resource.data).unchangedKeys();
      let requiredUnchanged = ['userId'];
      return unchangedFields.hasAll(requiredUnchanged) && hasValidMilestoneStructure();
    }

    match /projects/{projectId} {
      allow read: if isAuthenticated();
      
      allow create: if isAuthenticated() 
        && request.resource.data.userId == request.auth.uid
        && hasRequiredProjectFields()
        && hasValidMilestoneStructure();
      
      allow update: if isOwner(resource)
        && (
          (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['milestones']) 
            && isMilestoneUpdateValid())
          || hasRequiredProjectFields()
        );
      
      allow delete: if isOwner(resource);
    }
  }
}